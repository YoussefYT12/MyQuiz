// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyQuiz.Infrastructure.AllContexts;

#nullable disable

namespace MyQuiz.Infrastructure.Migrations.QuizDemoApp
{
    [DbContext(typeof(QuizDemoAppContext))]
    partial class QuizDemoAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyQuiz.Domain.Entities.Lk_Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("QuestionName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SysCodeQuestionLevelId")
                        .HasColumnType("int");

                    b.Property<int>("SysCodeQuestionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lk_Question", "Operation");
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Lk_QuestionChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChoisName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuestionChoice", "Operation");
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Lk_Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuizName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Lk_Quiz", "Operation");
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Lk_QuizQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lk_QuizQuestion", "Operation");
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Sys_SystemCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SystemCodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SystemCodeTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SystemCodeTypeId");

                    b.ToTable("SystemCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SystemCodeName = "Basic",
                            SystemCodeTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            SystemCodeName = "Intermediate",
                            SystemCodeTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            SystemCodeName = "Advanced",
                            SystemCodeTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            SystemCodeName = "True Or False",
                            SystemCodeTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            SystemCodeName = "Single Choice",
                            SystemCodeTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            SystemCodeName = "Multi Choice",
                            SystemCodeTypeId = 2
                        });
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Sys_SystemCodeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SystemCodeTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemCodeTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemCodeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SystemCodeTypeDescription = "Question Level Simple medium or Hard",
                            SystemCodeTypeName = "Question Level"
                        },
                        new
                        {
                            Id = 2,
                            SystemCodeTypeDescription = "Question Type ",
                            SystemCodeTypeName = "Question Type"
                        });
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Tr_QuizStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tr_QuizStudent", "Operation");
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Sys_SystemCode", b =>
                {
                    b.HasOne("MyQuiz.Domain.Entities.Sys_SystemCodeType", "SystemCodeType")
                        .WithMany("SystemCodes")
                        .HasForeignKey("SystemCodeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemCodeType");
                });

            modelBuilder.Entity("MyQuiz.Domain.Entities.Sys_SystemCodeType", b =>
                {
                    b.Navigation("SystemCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
